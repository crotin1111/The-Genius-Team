<!DOCTYPE html>
<html lang="en">
<%- include('header') %>
<style>
  #textExample {
    margin: 25px;
    min-width: 500px;
    min-height: fit-content;
    max-height: 150px;
    font-size: 18px;
    resize: none;
    overflow: hidden;
  }
</style>

<body>
  <div class='container text-white'>
    <strong class='display-6'>Admin Controls</strong>
    <hr>
    <input type="text" class='form-control' id="threadTitle" placeholder="Thread Title"><br>
    <textarea class="form-control" id="threadText" placeholder="Thread Text"></textarea><br>
    <select class="form-control" id="threadLocation">
      <option value="News">News</option>
      <option value="ChangeLog">Change Logs</option>
    </select><br>
    <button class="btn btn-primary" onclick="sendNews()">Submit</button>
    <br><br>
    <div class="container">
      <div class="row">
        <div class="col">
          <strong class="display-5">News</strong>
          <hr>
          <div id="news"></div>
        </div>
        <div class="col">
          [Changelog Would Appear Here]
        </div>
      </div>
    </div>

  </div>
</body>
<script>
  charAction(); // This will automatically run the news function.
  function charAction() {
    let xhr = new XMLHttpRequest();
    let url = "/api/news";
    var results;

    xhr.open("GET", url, true);

    xhr.setRequestHeader("Content-Type", "application/json");

    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4 && xhr.status === 200) {
        results = JSON.parse(this.responseText);
        for (i = 0; i < results.length; i++) {
          let article = document.createElement('div');
          article.classList.add('card', 'text-dark');
          let lBreak = document.createElement('br');
          let articleBody = document.createElement('div');
          articleBody.classList.add('card-body');
          articleBody.innerHTML =
            `<b>${results[i].title}</b> <small class='text-muted'>By ${results[i].author}</small><hr>${results[i].content}`
          article.appendChild(articleBody);
          document.querySelector('#news').appendChild(article);
          document.querySelector('#news').appendChild(lBreak);
        }
        return;
      }

      if (xhr.readyState === 4 && xhr.status == 400) {
        console.log(this.responseText)
        return;
      }

      if (xhr.readyState === 4 && xhr.status == 500) {
        console.log(this.responseText)
      }
    }

    xhr.send();
  }

  function sendNews() {
    let threadName = document.getElementById("threadTitle").value;
    let threadText = document.getElementById("threadText").value;

    let xhr = new XMLHttpRequest();
    let url = "/api/news/post";

    xhr.open("POST", url, true);

    xhr.setRequestHeader("Content-Type", "application/json");

    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4 && xhr.status === 200) {
        console.log(this.responseText);
        return;
      }

      if (xhr.readyState === 4 && xhr.status == 400) {
        console.log(this.responseText)
        return;
      }

      if (xhr.readyState === 4 && xhr.status == 500) {
        console.log(this.responseText)
      }
    }

    var data = [{ 'name' : threadName, 'content' : threadText, 'author' : 'example' }];

    xhr.send(JSON.stringify(data));
  }
</script>
<%- include('footer') %>

</html>